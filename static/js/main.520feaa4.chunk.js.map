{"version":3,"sources":["components/Searchbar/Searchbar.js","services/articlesApi.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleChange","value","target","setState","handleSubmit","e","preventDefault","props","onSubmit","resetValue","this","className","type","autoComplete","autoFocus","onChange","placeholder","Component","query","page","fetch","then","res","json","catch","error","ImageGalleryItem","url","onImgClick","onClick","src","alt","ImageGallery","photos","map","id","largeImageURL","webformatURL","key","Modal","handleESCClick","code","onClose","window","addEventListener","removeEventListener","imgUrl","App","loading","searchQuery","showModal","largeImgUrl","fetchFotos","articlesApi","data","prevState","hits","console","log","finally","togleModal","handleImgClick","handleFormSubmit","prevProps","prevQuery","nextQuery","prevPhotosLength","length","nextPhotoLength","scrollTo","top","document","documentElement","scrollHeight","behavior","isShowLoadMore","color","height","width","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.520feaa4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    inputValue: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { value } = target;\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { inputValue } = this.state;\n    this.props.onSubmit(inputValue);\n    this.resetValue();\n  };\n\n  resetValue = () => {\n    this.setState({\n      inputValue: \"\",\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={inputValue}\n            onChange={this.handleChange}\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","const key = \"17433580-73df9af353742e17a7ccf4b58\";\n\nconst fetchFotosWithQuery = (query, page) => {\n  return fetch(\n    `https://cors-anywhere.herokuapp.com/https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n  )\n    .then((res) => res.json())\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport default { fetchFotosWithQuery };\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ url, onImgClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        onClick={onImgClick}\n        src={url}\n        alt=\"Something beautiful\"\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem\";\n\nconst ImageGallery = ({ photos, onImgClick }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {photos.map(({ id, largeImageURL, webformatURL }) => (\n        <ImageGalleryItem\n          onImgClick={() => onImgClick(largeImageURL)}\n          key={id}\n          url={webformatURL}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import React, { Component } from \"react\";\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleESCClick);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleESCClick);\n  }\n  handleESCClick = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return (\n      <div className=\"Overlay\" onClick={this.props.onClose}>\n        <div className=\"Modal\">\n          <img src={this.props.imgUrl} alt=\"\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React, { Component } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport Searchbar from \"./components/Searchbar\";\nimport articlesApi from \"./services/articlesApi\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Modal from \"./components/Modal\";\n\nclass App extends Component {\n  state = {\n    photos: [],\n    loading: false,\n    searchQuery: \"\",\n    page: 1,\n    showModal: false,\n    largeImgUrl: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    const prevPhotosLength = prevState.photos.length;\n    const nextPhotoLength = this.state.photos.length;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchFotos();\n    }\n    if (prevPhotosLength !== nextPhotoLength) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  fetchFotos = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    articlesApi\n      .fetchFotosWithQuery(searchQuery, page)\n      .then((data) =>\n        this.setState((prevState) => ({\n          photos: [...prevState.photos, ...data.hits],\n          page: prevState.page + 1,\n        }))\n      )\n      .catch((error) => console.log(error))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  togleModal = () => {\n    this.setState((prevState) => ({ showModal: !prevState.showModal }));\n  };\n\n  handleImgClick = (largeImgUrl) => {\n    this.setState({ largeImgUrl: largeImgUrl });\n    this.togleModal();\n  };\n\n  handleFormSubmit = (query) => {\n    if (query === this.state.searchQuery) {\n      return;\n    }\n    this.setState({ photos: [], searchQuery: query, page: 1 });\n  };\n\n  render() {\n    const { photos, loading, showModal, largeImgUrl } = this.state;\n    const isShowLoadMore = photos.length > 0 && !loading;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery photos={photos} onImgClick={this.handleImgClick} />\n        {isShowLoadMore && (\n          <button type=\"button\" className=\"btn\" onClick={this.fetchFotos}>\n            Load More\n          </button>\n        )}\n        {loading && (\n          <Loader\n            className=\"Loader\"\n            type=\"ThreeDots\"\n            color=\"#303f9f\"\n            height={100}\n            width={100}\n          />\n        )}\n        {showModal && <Modal onClose={this.togleModal} imgUrl={largeImgUrl} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}